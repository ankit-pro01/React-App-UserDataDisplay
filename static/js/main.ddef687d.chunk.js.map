{"version":3,"sources":["Containers/Pages/Pages.module.css","Containers/TableVeiw/TableHead/Table.module.css","Components/Layout/Layout.module.css","Containers/TableVeiw/Main/Main.module.css","Components/Spinner/Spinner.module.css","Containers/DetailVeiw/DetailVeiw.module.css","Components/Layout/Layout.js","Containers/Pages/Pages.js","Components/Tablebody/users.js","Containers/TableVeiw/TableHead/TableHead.js","Components/Spinner/Spinner.js","Containers/TableVeiw/Main/Main.js","Containers/DetailVeiw/DetailVeiw.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","layout","props","className","classes","Layout","children","Pages","state","pages","lastPageNo","currentPage","previousButtondDisable","nextButtondDisable","style","PreviousPage","setState","paginate","NextPage","PreviousTenPages","NextTenPages","setCurrentPage","pageno","this","index","Math","ceil","allPages","length","push","indexOfLastPage","indexOfFirstPage","currentPages","slice","nextPageDisable","previousPageDisable","activeStyle","cursor","margin","padding","borderRadius","width","height","backgroundColor","color","border","fontWeight","fontSize","Page","PreviousButton","onClick","disabled","previousPage","map","pageNo","id","key","Button","nextPage","NextButton","Component","users","clicked","obj","first_name","last_name","company_name","city","zip","email","web","age","TableVeiw","setpage","searchIndicator","handleRow","history","updateChange","event","searchValue","target","value","handleSearch","List","filteredList","searchedList","error","allData","usersLists","filter","user","toLowerCase","indexOfLastUser","indexOfFirstUser","currentUsers","Table","Nav","placeholder","onChange","searchButton","ascendingOrder","dscendingOrder","spinner","Loader","Main","list","Users","sort","a","b","console","log","loading","fetch","data","json","res","fetchUsers","textAlign","table","container","Spinner","DetailVeiw","goToPreviousPage","fetchUser","userDetails","match","params","userid","String","App","path","exact","component","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ddef687d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"Pages_Page__27g_4\",\"previousPage\":\"Pages_previousPage__aIl6A\",\"nextPage\":\"Pages_nextPage__ayuQq\",\"Button\":\"Pages_Button__nIGPu\",\"NextButton\":\"Pages_NextButton__3TWxl\",\"PreviousButton\":\"Pages_PreviousButton__NlqTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__x3Kcd\",\"Nav\":\"Table_Nav__vh66R\",\"searchButton\":\"Table_searchButton__2E-zS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__33Dw3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Main_Container__32zgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__13KrJ\",\"load7\":\"Spinner_load7__12VNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DetailVeiw\":\"DetailVeiw_DetailVeiw__10zne\"};","import React from \"react\";\r\nimport classes from \"./Layout.module.css\"\r\n\r\nconst layout = (props) =>{\r\n        return(\r\n            <div className = {classes.Layout}>\r\n                {props.children}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default layout;","import React, { Component } from \"react\";\r\nimport classes from \"./Pages.module.css\";\r\n\r\nclass Pages extends Component{\r\n    state = {\r\n        pages : [],\r\n        lastPageNo : 10,\r\n        currentPage : 1 ,\r\n        previousButtondDisable :false,\r\n        nextButtondDisable:false,\r\n        style : {}\r\n    }\r\n\r\n    PreviousPage = () => {    \r\n        this.setState({...this.state, currentPage : this.state.currentPage -1 });\r\n        this.props.paginate(this.state.currentPage - 1);\r\n\r\n    }\r\n\r\n    NextPage = () => {\r\n        this.setState({...this.state, currentPage : this.state.currentPage + 1 });\r\n        this.props.paginate(this.state.currentPage + 1);\r\n\r\n    }\r\n\r\n    PreviousTenPages = () => {    \r\n        this.setState({...this.state, lastPageNo : this.state.lastPageNo - 10,\r\n             currentPage : this.state.lastPageNo});\r\n\r\n        this.props.paginate(this.state.currentPage);\r\n    }\r\n\r\n    NextTenPages = () => {\r\n        this.setState({...this.state, lastPageNo : this.state.lastPageNo + 10,\r\n        currentPage : this.state.lastPageNo})\r\n        this.props.paginate(this.state.currentPage);\r\n\r\n    }\r\n\r\n    setCurrentPage = (pageno) => {\r\n        this.setState({...this.state, currentPage : pageno})\r\n        this.props.paginate(pageno);\r\n    }\r\n\r\n    render(){\r\n        \r\n        let pages = [...this.state.pages];\r\n        for (let index = 0; index < Math.ceil((this.props.allPages.length/5)); index++) {\r\n            pages.push(index+1);\r\n        };\r\n\r\n        let indexOfLastPage = this.state.lastPageNo;\r\n        let indexOfFirstPage = this.state.lastPageNo - 10;\r\n        let currentPages = pages.slice(indexOfFirstPage,indexOfLastPage);    \r\n\r\n        let previousButtondDisable = indexOfFirstPage === 0 ? true : false;\r\n        let nextButtondDisable = indexOfLastPage === pages.length ? true : false; \r\n\r\n        let nextPageDisable = (this.state.currentPage < currentPages[9]) ? false : true; \r\n        let previousPageDisable = (this.state.currentPage > currentPages[0]) ? false : true; \r\n\r\n        let activeStyle ={\r\n                        cursor: \"pointer\",\r\n                        margin: \"20px auto\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"50%\",\r\n                        width: \"50px\",\r\n                        height: \"50px\",\r\n                        backgroundColor: \"blanchedalmond\" ,\r\n                        color : \"lightseagreen\",\r\n                        border : \"2px solid lightseagreen\",\r\n                        fontWeight:\"bolder\",\r\n                        fontSize:\"20px\"  \r\n        }\r\n\r\n        return(\r\n            \r\n            <div className = {classes.Page}>\r\n                <button className = {classes.PreviousButton} \r\n                        onClick ={this.PreviousTenPages} \r\n                        disabled = {previousButtondDisable}>Previous</button>\r\n\r\n                <button className = {classes.previousPage}\r\n                        onClick = {this.PreviousPage}\r\n                        disabled = {previousPageDisable}>{`<`}</button>\r\n\r\n                {currentPages.map(pageNo =>\r\n                <button id = {pageNo} key = {pageNo} className = {classes.Button} \r\n                onClick = {() => this.setCurrentPage(pageNo)}\r\n                style = {pageNo === this.state.currentPage ? activeStyle : {height: \"50px\"\r\n                }}>{pageNo}</button>)}\r\n                <button  className ={classes.nextPage}\r\n                 onClick = {this.NextPage} disabled = {nextPageDisable}>{`>`}</button>\r\n\r\n                <button className = {classes.NextButton} \r\n                onClick = {this.NextTenPages} disabled = {nextButtondDisable}>Next</button>\r\n           \r\n            </div>\r\n            \r\n        )\r\n    };\r\n    \r\n}\r\n\r\n   \r\nexport default Pages;","import React from \"react\";\r\n\r\nconst users = (props) => {\r\n\r\n    return(\r\n        <tr onClick = {props.clicked} key = {props.obj.id} >\r\n            <td>{props.obj.first_name}</td>\r\n            <td>{props.obj.last_name}</td>\r\n            <td>{props.obj.company_name}</td>\r\n            <td>{props.obj.city}</td>\r\n            <td>{props.obj.state}</td>\r\n            <td>{props.obj.zip}</td>\r\n            <td>{props.obj.email}</td>\r\n            <td>{props.obj.web}</td>\r\n            <td>{props.obj.age}</td>\r\n        </tr>\r\n    )\r\n};\r\n\r\nexport default users;","import React, {Component } from \"react\";\r\n\r\nimport Pages from \"../../Pages/Pages\";\r\nimport Users from \"../../../Components/Tablebody/users\";\r\nimport classes from \"./Table.module.css\";\r\n\r\n\r\nclass TableVeiw extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            List : [],\r\n            filteredList : [],\r\n            searchedList : [],\r\n            searchValue : \"\",\r\n            pageno : 1,\r\n            error : null,\r\n            searchIndicator : false\r\n        }\r\n    }\r\n\r\n    setpage = (pageno) => this.setState({pageno : pageno,searchIndicator: false})\r\n\r\n    handleRow = (id) => {\r\n        this.props.history.push(\"/user/\" + id)\r\n    }\r\n\r\n    updateChange = (event) => {\r\n        this.setState({searchValue: event.target.value})\r\n    }\r\n\r\n    handleSearch = () => {\r\n        this.setState({searchIndicator: true});\r\n\r\n    }\r\n\r\n    render() {\r\n        let pages = null;\r\n        let allData = this.props.error;        \r\n\r\n        if(!this.props.error){\r\n        let filteredList = this.props.usersLists.filter(user => {\r\n            return user.first_name.toLowerCase() === this.state.searchValue.toLowerCase()\r\n        })\r\n        let currentPage = this.state.pageno;\r\n        const showUserPerPage = 5; \r\n        let indexOfLastUser = currentPage * showUserPerPage;\r\n        let indexOfFirstUser = indexOfLastUser - 5;\r\n        let currentUsers =  this.props.usersLists.slice(indexOfFirstUser, indexOfLastUser);\r\n        let mapLists = this.state.searchIndicator ? filteredList : currentUsers\r\n\r\n        allData = (mapLists.map(obj => {\r\n                        return (<Users clicked = {() => this.handleRow(obj.id)} \r\n                            key= {obj.id} obj= {obj}/>\r\n                    )}\r\n                ))\r\n        \r\n        pages = (<Pages paginate = {this.setpage} currentPage = {this.state.pageno} allPages = {this.props.usersLists} />)\r\n        }\r\n\r\n        return(\r\n            <div className = {classes.Table}>\r\n                <div className = {classes.Nav}>\r\n                    <input placeholder = \"search by first name\" onChange = {\r\n                    (event) =>this.updateChange(event)} />\r\n                    <button className = {classes.searchButton} \r\n                    disabled = {!this.state.searchValue}\r\n                    style ={{cursor : this.state.searchValue ? \"pointer\" : \"not-allowed\"}}  \r\n                     onClick = {this.handleSearch}>search</button>\r\n                </div>\r\n                <table>\r\n                    <thead> \r\n                        <tr>\r\n                            <th>First Name\r\n                                <div>\r\n                                    <button id = \"first_name\" onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"first_name\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>   \r\n                            </th>\r\n                            <th>last Name\r\n                                <div>\r\n                                    <button  id = \"last_name\" onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"last_name\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>Company\r\n                                <div>\r\n                                    <button id = \"company_name\" onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"company_name\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>City\r\n                                <div>\r\n                                    <button id = \"city\" onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"city\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>State\r\n                                <div>\r\n                                    <button id = \"state\" onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"state\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>zip\r\n                                <div>\r\n                                    <button id = \"zip\" onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"zip\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>Email\r\n                                <div>\r\n                                    <button  id = \"email\"onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"email\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>Web\r\n                                <div>\r\n                                    <button id = \"web\"onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"web\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                            <th>Age\r\n                                <div>\r\n                                    <button id = \"age\"onClick = {(event) => this.props.ascendingOrder(event)}>{`v`}</button>\r\n                                    <button id = \"age\" onClick = {(event) => this.props.dscendingOrder(event)}>{`v`}</button>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allData}\r\n                    </tbody>\r\n                </table>\r\n             {pages}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableVeiw;","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst spinner = (props) => {\r\n\r\n    return(\r\n        <div className = {classes.Loader}>\r\n            loading....\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default spinner;","import React, {Component } from \"react\";\r\nimport TableVeiw from \"../TableHead/TableHead\";\r\nimport classes from \"./Main.module.css\";\r\nimport Spinner from \"../../../Components/Spinner/Spinner\"\r\n\r\nclass Main extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            Users : [],\r\n            loading: false,\r\n            error : null\r\n            };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const fetchUsers = async () => {\r\n            this.setState({...this.state, loading : true});   \r\n            let res;\r\n            try{\r\n                let data = await fetch(\"https://datapeace-storage.s3-us-west-2.amazonaws.com/dummy_data/users.json\");\r\n                res = await data.json();\r\n            }  \r\n            catch(err){\r\n                this.setState({...this.state, loading : false, error : err});            \r\n            }\r\n            this.setState({...this.state, Users : res, loading : false});           \r\n        }\r\n        fetchUsers();   \r\n    }\r\n\r\n    ascendingOrder = (event) => {\r\n        let list = [...this.state.Users]\r\n        let coloumnFeild = event.target.id;\r\n        switch (coloumnFeild) {\r\n            case \"first_name\":\r\n                list.sort((a,b) => {\r\n                    if(a.first_name > b.first_name){\r\n                        return 1\r\n                    }\r\n                    if(a.first_name < b.first_name){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list})                \r\n                \r\n            case \"last_name\":\r\n                list.sort((a,b) => {\r\n                    if(a.last_name > b.last_name){\r\n                        return 1\r\n                    }\r\n                    if(a.last_name < b.last_name){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"company_name\":\r\n                list.sort((a,b) => {\r\n                    if(a.company_name > b.company_name){\r\n                        return 1\r\n                    }\r\n                    if(a.company_name < b.company_name){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"city\":\r\n                list.sort((a,b) => {\r\n                    if(a.city > b.city){\r\n                        return 1\r\n                    }\r\n                    if(a.city < b.city){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                   \r\n            case \"state\":\r\n                list.sort((a,b) => {\r\n                    if(a.state > b.state){\r\n                        return 1\r\n                    }\r\n                    if(a.state < b.state){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                                \r\n            case \"zip\":\r\n                list.sort((a,b) => {\r\n                    if(a.zip > b.zip){\r\n                        return 1\r\n                    }\r\n                    if(a.zip < b.zip){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"email\":\r\n                list.sort((a,b) => {\r\n                    if(a.email > b.email){\r\n                        return 1\r\n                    }\r\n                    if(a.email < b.email){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"web\":\r\n                list.sort((a,b) => {return a.age - b.age});\r\n                console.log(list);\r\n                return this.setState({Users : list});\r\n            \r\n                \r\n            case \"age\":\r\n                list.sort((a,b) => {return a.age - b.age});\r\n                console.log(list);\r\n                return this.setState({Users : list});\r\n                \r\n        \r\n            default:\r\n                \r\n        }\r\n        \r\n    }\r\n\r\n    dscendingOrder = (event) => {\r\n        let list = [...this.state.Users]\r\n        let coloumnFeild = event.target.id;\r\n        switch (coloumnFeild) {\r\n            case \"first_name\":\r\n                list.sort((a,b) => {\r\n                    if(a.first_name < b.first_name){\r\n                        return 1\r\n                    }\r\n                    if(a.first_name > b.first_name){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list})                \r\n                \r\n            case \"last_name\":\r\n                list.sort((a,b) => {\r\n                    if(a.last_name < b.last_name){\r\n                        return 1\r\n                    }\r\n                    if(a.last_name > b.last_name){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"company_name\":\r\n                list.sort((a,b) => {\r\n                    if(a.company_name < b.company_name){\r\n                        return 1\r\n                    }\r\n                    if(a.company_name > b.company_name){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"city\":\r\n                list.sort((a,b) => {\r\n                    if(a.city < b.city){\r\n                        return 1\r\n                    }\r\n                    if(a.city > b.city){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                   \r\n            case \"state\":\r\n                list.sort((a,b) => {\r\n                    if(a.state < b.state){\r\n                        return 1\r\n                    }\r\n                    if(a.state > b.state){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                                \r\n            case \"zip\":\r\n                list.sort((a,b) => {\r\n                    if(a.zip < b.zip){\r\n                        return 1\r\n                    }\r\n                    if(a.zip > b.zip){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"email\":\r\n                list.sort((a,b) => {\r\n                    if(a.email < b.email){\r\n                        return 1\r\n                    }\r\n                    if(a.email > b.email){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n                \r\n                \r\n            case \"web\":\r\n                list.sort((a,b) => {\r\n                    if(a.web < b.web){\r\n                        return 1\r\n                    }\r\n                    if(a.web > b.web){\r\n                        return -1\r\n                    }\r\n                    return 0;\r\n                })\r\n                return this.setState({Users : list}) \r\n            \r\n                \r\n            case \"age\":\r\n                list.sort((a,b) => {return b.age - a.age});\r\n                console.log(list);\r\n                return this.setState({Users : list});\r\n                \r\n            default:\r\n                break;\r\n        }       \r\n    }\r\n\r\n    render() {\r\n        \r\n        let error = this.state.error ? (<h1 \r\n            style = {{textAlign : \"center\"}}\r\n            >Some thing went wrong!!!</h1>):null;\r\n        \r\n        let table = (\r\n            <div className = {classes.container}>\r\n                <TableVeiw usersLists = {this.state.Users} {...this.props} \r\n                ascendingOrder = {this.ascendingOrder}\r\n                dscendingOrder = {this.dscendingOrder}\r\n                error = {error}/>\r\n            </div>\r\n        )\r\n        return(\r\n            this.state.loading ? <Spinner /> : table\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, {Component} from \"react\";\r\nimport classes from \"./DetailVeiw.module.css\";\r\nimport Spinner from \"../../Components/Spinner/Spinner\";\r\n\r\nclass DetailVeiw extends Component{\r\n    state ={\r\n        Users : [], \r\n        user: [],\r\n        loading : false,\r\n        error: null};\r\n\r\n    goToPreviousPage = () =>{\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        const fetchUser = async () => {    \r\n\r\n            this.setState({...this.state, loading : true});  \r\n            let res;\r\n            try{\r\n                let data = await fetch(\"https://datapeace-storage.s3-us-west-2.amazonaws.com/dummy_data/users.json\");\r\n                res = await data.json();\r\n            }\r\n            catch(err){\r\n                this.setState({...this.state,loading : false, error : err});     \r\n            }\r\n\r\n            this.setState({...this.state,loading : false, Users : res});     \r\n        }  \r\n        fetchUser();  \r\n    }\r\n\r\n    render(){       \r\n        let userDetails = (<div><h1>Something Went Wrong!!!</h1></div>)\r\n        if(!this.state.error){\r\n            let id = this.props.match.params.userid;\r\n             let user = this.state.Users.filter(user => {\r\n            return String(user.id) === String(id)\r\n        });\r\n\r\n        userDetails = user.map(user => {\r\n            return (<div className={classes.DetailVeiw} key = {user.id}>\r\n                        <div><button onClick = {this.goToPreviousPage}>Go back</button></div>\r\n                        <table>\r\n                            <caption>\r\n                                {user.first_name + \" \" + user.last_name}\r\n                            </caption>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td >Company</td>\r\n                                    <td>{user.company_name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>City</td>\r\n                                    <td>{user.city}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>State</td>\r\n                                    <td>{user.state}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Zip</td>\r\n                                    <td>{user.zip}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Email</td>\r\n                                    <td>{user.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Age</td>\r\n                                    <td>{user.age}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>  \r\n                    </div>\r\n            )\r\n        })\r\n            \r\n        }                \r\n        \r\n\r\n        return (this.state.loading ? <Spinner /> : userDetails)\r\n    }\r\n\r\n}\r\n\r\nexport default DetailVeiw;","import React from 'react';\r\nimport './App.css';\r\nimport Layout from './Components/Layout/Layout';\r\nimport { HashRouter, Route, Switch, } from \"react-router-dom\";\r\nimport Main from './Containers/TableVeiw/Main/Main';\r\nimport DetailVeiw from \"./Containers/DetailVeiw/DetailVeiw\"\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n        <div className=\"App\">\r\n          <Layout>\r\n            <Switch>\r\n                <Route path =\"/\" exact component = {Main} />\r\n                <Route path = \"/user/:userid\"  exact component = {DetailVeiw} />\r\n                <Route render = {() => <h2>404 ! Page not Found!!!</h2>} />\r\n            </Switch>\r\n          </Layout>\r\n      </div>\r\n    </HashRouter>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}